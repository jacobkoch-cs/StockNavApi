trigger:
- master

pr:
- master

stages:

- stage: build

  variables:
    sdkVersion: 3.1.x
    solutionPath: ./StockNavApi
    buildConfiguration: Release

  jobs:

  - job: build

    pool:
      vmImage: ubuntu-latest

    steps:

    - task: UseDotNet@2
      inputs:
        packageType: sdk
        version: $(sdkVersion)
      displayName: dotnet $(sdkVersion)

    - task: DotNetCoreCLI@2
      inputs:
        command: publish
        publishWebProjects: true
        arguments:
          --configuration $(buildConfiguration)
          --output $(Build.ArtifactStagingDirectory)/app
        modifyOutputPath: false
        zipAfterPublish: false
      displayName: dotnet publish

    - publish: $(Build.ArtifactStagingDirectory)/app
      artifact: app
      displayName: artifact publish app

  - job: test

    pool:
      vmImage: ubuntu-latest

    steps:

    - task: UseDotNet@2
      inputs:
        packageType: sdk
        version: 2.1.x
      displayName: dotnet 2.1.x
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'SonarCloudConnection'
        organization: 'jacobkoch-cs'
        scannerMode: 'MSBuild'
        projectKey: 'jacobkoch-cs_StockNavApi'
        projectName: 'StockNavApi'
        extraProperties: |
          sonar.cs.opencover.reportsPaths=$(Common.TestResultsDirectory)/*/coverage.opencover.xml
      displayName: sonarcloud analysis prepare

    - task: UseDotNet@2
      inputs:
        packageType: sdk
        version: $(sdkVersion)
      displayName: dotnet $(sdkVersion)

    - script: dotnet build
        --configuration $(buildConfiguration)
      workingDirectory: $(solutionPath)
      displayName: dotnet build

    - script: dotnet test
        --configuration $(buildConfiguration)
        --logger trx
        --no-build
        --results-directory $(Common.TestResultsDirectory)
        --settings coverlet.runsettings
      workingDirectory: $(solutionPath)
      continueOnError: true
      displayName: dotnet test

    - task: SonarCloudAnalyze@1
      displayName: sonarcloud analysis run

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testRunner: VSTest
        testResultsFiles: $(Common.TestResultsDirectory)/*.trx
      displayName: test results build publish

    - task: PublishCodeCoverageResults@1
      condition: succeededOrFailed()
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: $(Common.TestResultsDirectory)/*/coverage.cobertura.xml
      displayName: code coverage build publish

    - task: SonarCloudPublish@1
      condition: succeededOrFailed()
      displayName: sonarcloud results build publish

- stage: deploy
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  dependsOn: build

  jobs:

  - deployment: deploy_dev

    pool:
      vmImage: ubuntu-latest

    environment: dev

    strategy:
      runOnce:
        deploy:
          steps:

          - download: current
            artifact: app
            displayName: artifact download app
            
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: 'AzureConnection'
              appType: 'webApp'
              WebAppName: 'StockNavApi'
              packageForLinux: $(Pipeline.Workspace)/app
            displayName: azure app service deploy